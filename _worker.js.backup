import{connect}from'cloudflare:sockets';const C={sub:'123123',uuid:'26687cd8-fcb8-4189-974c-7513f08fe875',fallback:'sjc.o00o.ooo',hdrs:{'cache-control':'public,max-age=14400','content-type':'text/plain'}};const U=Uint8Array.from(C.uuid.replace(/-/g,''),(c,i,a)=>parseInt(a[i]+a[i+1],16));const D=new TextDecoder();let cache={},cacheSize=0,nodeList=['www.visa.cn:443'],stmt;const v=(buf)=>buf.slice(1,17).every((x,i)=>x===U[i]);const p=(b,o)=>{const P=(b[o]<<8)|b[o+1],t=b[o+2],s=o+3;if(t&1)return{host:`${b[s]}.${b[s+1]}.${b[s+2]}.${b[s+3]}`,port:P,end:s+4};if(t&4){let a='[';for(let i=0;i<8;i++)a+=(i?':':'')+((b[s+i*2]<<8)|b[s+i*2+1]).toString(16);return{host:a+']',port:P,end:s+16}}const l=b[s];return{host:D.decode(b.subarray(s+1,s+1+l)),port:P,end:s+1+l}};const b=(ip,name,host)=>{const s=ip.indexOf('#'),e=s>-1?ip.slice(0,s):ip,t=s>-1?ip.slice(s+1):name||'';let h,P='443';if(e[0]==='['){const c=e.indexOf(']');h=e.slice(0,c+1);const m=e.slice(c+1).match(/^:(\d+)/);if(m)P=m[1]}else{const c=e.indexOf(':');h=c>-1?e.slice(0,c):e;if(c>-1)P=e.slice(c+1)}return`vless://${C.uuid}@${h}:${P}?encryption=none&security=tls&type=ws&host=${host}&path=%2F%3Fed%3D2560&sni=${host}#${encodeURIComponent(t||h.replace(/\./g,'-')+'-'+P)}`};const qf=()=>{let q=Promise.resolve();return f=>q=q.then(f).catch(()=>{})};const E4=new Response(null,{status:400}),E5=new Response(null,{status:502}),R=Response.redirect('https://github.com',302);export default{async fetch(r,env){let u=cache[r.url];if(!u){if(cacheSize>=64){cache={};cacheSize=0}u=new URL(r.url);cache[r.url]=u;cacheSize++}const{host,pathname}=u;if(r.headers.get('upgrade')==='websocket'){const proto=r.headers.get('sec-websocket-protocol');if(!proto)return E4;const bin=atob(proto.replace(/[-_]/g,c=>c<'.'?'+':'/'));if(bin.length<18)return E4;const buf=Uint8Array.from(bin,c=>c.charCodeAt(0));if(!v(buf))return E4;const{host:th,port:tp,end}=p(buf,19+buf[17]);let sckt;try{sckt=connect({hostname:th,port:tp});await sckt.opened}catch{try{sckt=connect({hostname:C.fallback,port:443});await sckt.opened}catch{return E5}}const[cl,sv]=Object.values(new WebSocketPair());sv.accept();sv.send(new Uint8Array(2));const W=qf();if(buf.length>end){const pl=buf.subarray(end);W(async()=>{const w=sckt.writable.getWriter();await w.write(pl);w.releaseLock()})}sv.addEventListener('message',e=>W(async()=>{const w=sckt.writable.getWriter();await w.write(e.data);w.releaseLock()}));sckt.readable.pipeTo(new WritableStream({write(c){sv.send(c)}})).catch(()=>{});return new Response(null,{status:101,webSocket:cl})}if(pathname===`/${C.sub}`||pathname===`/${C.sub}/vless`){try{stmt??=env.DB.prepare('SELECT ip,name FROM ips WHERE active=1 ORDER BY id ASC');const{results}=await stmt.all();if(results.length)nodeList=results.map(r=>r.ip+(r.name?'#'+r.name:''))}catch{}return new Response(`sub: https://${host}/${C.sub}`,{headers:C.hdrs})}return R}}
